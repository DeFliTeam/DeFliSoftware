# Adding a Ground Station to DeFli Blockchain 

All DeFli and DeSky Ground Station's will automatically join and sync to the DeFli blockchain upon registration and activation. 

For Helium Conversion and Self-Builds please follow the steps below 

# Install CLI CLient 

Releases of the CLI wallet are tagged and hosted on Github. Click on "Downloads" for the most recent release and select the appropriate package for your operating system.

Unpack the zip file and place the defli-wallet binary in your $PATH somewhere. This operation differs depending on your operating system, but is a common task and easily searchable.

# Create Wallet 

$ defli-wallet create new 

This command will create a wallet as a single key, stored in wallet.key which gets output in whatever directory you ran this command.

Upon creation, the CLI will prompt you for a password which encrypts the file. A strong password will make it difficult for someone to brute force the file should the file be compromised.

Display Wallet

Displaying information for one or more wallets without needing its password can be done using;

$ defli-wallet info

To display a QR code for the public key of the given wallet use:

$ defli-wallet info --qr

This is useful for sending tokens to the wallet from the mobile wallet. 

# Export to DeFli Wallet App 

$ defli-wallet export

You will be prompted for the Wallet Password, (this is not your 12-word or 24-word seed phrase, this password was input when the wallet was created.)

Next, you will be prompted to enter an Export Password twice. This password will be used in the DeFli Wallet App.

A QR Code will be generated and shown in your terminal.

Within the DeFli Wallet App click "add CLI wallet" 
Scan the QR Code 
Enter Export Password 
Tap "decrypt and import" 

# Add Ground Station to Blockchain 

./defli_gs add --owner WALLET_ADDRESS --payer WALLET_ADDRESS --mode selfbuild 

The output is a JSON object:

{
  "address": "1YBD85NMGvHD74NFjjhdywsskvNR1Fdar1Pg4Hfd844mGHt639",
  "fee": 42000,
  "mode": "selfbuild",
  "owner": "27HYy858tmgmGGUMDMALuwonfjf759nemmfPJHEYFB88cDrN09z",
  "payer": "27HYy858tmgmGGUMDMALuwonfjf759nemmfPJHEYFB88cDrN09z",
  ,"txn": "CrkBCiEBrlImpYLbJ0z0hw5b4g9isRyPrgbXs9X+RrJ4pJJc9MkSIQA7yIy7F+9oPYCTmDz+v782GMJ4AC+jM+VfjvUgAHflWSJGMEQCIGfugfLkXv23vJcfwPYjLlMyzYhKp+Rg8B2YKwnsDHaUAiASkdxUO4fdS33D7vyid8Tulizo9SLEL1lduyvda9YVRCohAa5SJqWC2ydM9IcOW+IPYrEcj64G17PV/kayeKSSXPTJOMCEPUDo+wM="
}


The txn field needs to be used as the input to the wallet command defli-wallet hotspot add. For example:

defli-wallet gs add CrkBCiEBrlImpYLbJ0z0hw5b4g9isRyPrgbXs9X+RrJ4pJJc9MkSIQA7yIy7F+9oPYCTmDz+v782GMJ4AC+jM+VfjvUgAHflWSJGMEQCIGfugfLkXv23vJcfwPYjLlMyzYhKp+Rg8B2YKwnsDHaUAiASkdxUO4fdS33D7vyid8Tulizo9SLEL1lduyvda9YVRCohAa5SJqWC2ydM9IcOW+IPYrEcj64G17PV/kayeKSSXPTJOMCEPUDo+wM=

After you verify the transaction, append the command with --commit to submit it to the API. Note you require sufficient FLIGHT or ORBIT tokens to complete the transaction.

# Assert Ground Station 

To assert the Ground Station use defli-wallet hotspots assert 
defli-wallet gs assert --gs GS_PUBKEY --lat=37.7806295 --lon=-122.4008481 --mode selfbuild 
defli-wallet gs assert --gs --elevation GS_PUBKEY --elev=110 --mode selfbuild 

The GS_PUBKEY from the previous transaction would be- 27HYy858tmgmGGUMDMALuwonfjf759nemmfPJHEYFB88cDrN09z
